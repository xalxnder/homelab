postiz:
  enabled: true
  global:
    fullnameOverride: postiz
  controllers:
    postiz:
      type: deployment
      strategy: RollingUpdate
      containers:
        postiz:
          env:
          - name: REDIS_URL
            valueFrom:
              secretKeyRef:
                name: redis-url
                key: REDIS_URL
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: database-url
                key: DATABASE_URL
          - name: FRONTEND_URL
            value: "https://postiz.xalab.io"                     # Pod/service name inside cluster
          - name: NEXT_PUBLIC_BACKEND_URL
            value: "https://postiz.xalab.io/api"          # External/public-facing backend URL
          - name: BACKEND_INTERNAL_URL
            value: "http://postiz:3000"             # Internal API URL inside cluster
          - name: STORAGE_PROVIDER
            value: "local"
          - name: UPLOAD_DIRECTORY
            value: "/uploads"
          - name: NEXT_PUBLIC_UPLOAD_DIRECTORY
            value: "/uploads"
            
          image:
            repository: ghcr.io/gitroomhq/postiz-app
            tag: v1.65.1
            pullPolicy: IfNotPresent
    redis:
      type: deployment
      replicas: 1
      strategy: RollingUpdate
      containers:
        redis:
          image:
            repository: redis
            tag: "7.2"
            pullPolicy: IfNotPresent
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-password
                  key: REDIS_PASSWORD

    postgresql:
      type: deployment
      replicas: 1
      strategy: RollingUpdate
      containers:
        postgresql:
          image:
            repository: postgres
            tag: "17.5"
            pullPolicy: IfNotPresent
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-password
                key: POSTGRES_PASSWORD
          - name: POSTGRES_USER
            value: "postiz"
          - name: POSTGRES_DB
            value: "postiz"
  
  persistence:
    uploads:
      enabled: true
      size: 2Gi
      accessModes:
        - ReadWriteOnce
      storageClass: longhorn
      globalMounts:
        - path: /uploads
          readOnly: false
      retain: true

  
  service:
    postiz:
      controller: postiz
      ports:
        http:
          port: 5000
    postgresql:
      controller: postgresql
      type: ClusterIP
      ports:
        http:
          port: 5432
    redis:
      controller: redis
      type: ClusterIP
      ports:
        http:
          port: 6379

    
  ingress:
    postiz:
      className: "traefik"
      annotations: 
        kubernetes.io/ingress.class: traefik
        cert-manager.io/cluster-issuer: lets-encrypt-production
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
      hosts:
        - host: "postiz.xalab.io"
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: postiz
                port: 5000
      tls:
        - hosts:
            - postiz.xalab.io
          secretName: tls-secret
  secrets:
    postiz-secrets:
      stringData:
        JWT_SECRET: ""
        X_API_KEY: ""
        X_API_SECRET: ""
        LINKEDIN_CLIENT_ID: ""
        LINKEDIN_CLIENT_SECRET: ""
        REDDIT_CLIENT_ID: ""
        REDDIT_CLIENT_SECRET: ""
        GITHUB_CLIENT_ID: ""
        GITHUB_CLIENT_SECRET: ""
        RESEND_API_KEY: ""
        CLOUDFLARE_ACCOUNT_ID: ""
        CLOUDFLARE_ACCESS_KEY: ""
        CLOUDFLARE_SECRET_ACCESS_KEY: ""
        CLOUDFLARE_BUCKETNAME: ""
        CLOUDFLARE_BUCKET_URL: ""