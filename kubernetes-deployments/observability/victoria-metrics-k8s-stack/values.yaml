victoria-metrics-k8s-stack:
  enabled: true
  fullnameOverride: vm-k8s-stack
  defaultRules:
    create: false
  defaultDashboards:
    enabled: true
    defaultTimezone: utc
    labels: {}
    annotations: {}
    grafanaOperator:
      # -- Create dashboards as CRDs (requires grafana-operator to be installed)
      enabled: false
      spec:
        instanceSelector:
          matchLabels:
            dashboards: grafana
        allowCrossNamespaceImport: false
    # -- Create dashboards as ConfigMap despite dependency it requires is not installed
    dashboards:
      victoriametrics-vmalert:
        enabled: false
      victoriametrics-operator:
        enabled: true
      # -- In ArgoCD using client-side apply this dashboard reaches annotations size limit and causes k8s issues without server side apply
      # See [this issue](https://github.com/VictoriaMetrics/helm-charts/tree/disable-node-exporter-dashboard-by-default/charts/victoria-metrics-k8s-stack#metadataannotations-too-long-must-have-at-most-262144-bytes-on-dashboards)
      node-exporter-full:
        enabled: true

  persistence:
    enabled: true
    type: pvc
    size: 2Gi
    accessModes:
    - ReadWriteOnce
  victoria-metrics-operator:
    enabled: true
    admissionWebhooks:
      enabled: false
 

  vmsingle:
    spec:
      storage:
        resources:
          requests:
            storage: 5Gi

  grafana:
    # admin:
    #   existingSecret: "vm-grafana-secret"
    #   userKey: admin-user
    #   passwordKey: admin-password
    persistence:
      enabled: false
      size: 2Gi
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: lets-encrypt-production
        # ingress.kubernetes.io/protocol: http
        kubernetes.io/ingress.class: traefik
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
      hosts:
        - &host grafana.xalab.io
      tls:
        - hosts:
            - *host
          secretName: tls-secret
    # service:
    #   type: LoadBalancer
