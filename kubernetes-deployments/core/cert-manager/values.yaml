cert-manager:
  installCRDs: true
  dns01RecursiveNameservers: "1.1.1.1:53,9.9.9.9:53"
  dns01RecursiveNameserversOnly: true
  podDnsPolicy: "None"
  podDnsConfig:
    nameservers:
      - "1.1.1.1"
      - "9.9.9.9"

  enableCertificateOwnerRef: true
  prometheus:
  # Enable Prometheus monitoring for the cert-manager controller and webhook.
  # If you use the Prometheus Operator, set prometheus.podmonitor.enabled or
  # prometheus.servicemonitor.enabled, to create a PodMonitor or a
  # ServiceMonitor resource.
  # Otherwise, 'prometheus.io' annotations are added to the cert-manager and
  # cert-manager-webhook Deployments.
  # Note that you can not enable both PodMonitor and ServiceMonitor as they are
  # mutually exclusive. Enabling both will result in an error.
    enabled: true

    servicemonitor:
      # Create a ServiceMonitor to add cert-manager to Prometheus.
      enabled: false

      # The namespace that the service monitor should live in, defaults
      # to the cert-manager namespace.
      # +docs:property
      # namespace: cert-manager

      # Specifies the `prometheus` label on the created ServiceMonitor. This is
      # used when different Prometheus instances have label selectors matching
      # different ServiceMonitors.
      prometheusInstance: default

      # The target port to set on the ServiceMonitor. This must match the port that the
      # cert-manager controller is listening on for metrics.
      targetPort: 9402

      # The path to scrape for metrics.
      path: /metrics

      # The interval to scrape metrics.
      interval: 60s

      # The timeout before a metrics scrape fails.
      scrapeTimeout: 30s

      # Additional labels to add to the ServiceMonitor.
      labels: {}

      # Additional annotations to add to the ServiceMonitor.
      annotations: {}

      # Keep labels from scraped data, overriding server-side labels.
      honorLabels: false

      # EndpointAdditionalProperties allows setting additional properties on the
      # endpoint such as relabelings, metricRelabelings etc.
      #
      # For example:
      #  endpointAdditionalProperties:
      #   relabelings:
      #   - action: replace
      #     sourceLabels:
      #     - __meta_kubernetes_pod_node_name
      #     targetLabel: instance
      #
      # +docs:property
      endpointAdditionalProperties: {}

    # Note that you can not enable both PodMonitor and ServiceMonitor as they are mutually exclusive. Enabling both will result in an error.
    podmonitor:
      # Create a PodMonitor to add cert-manager to Prometheus.
      enabled: false

      # The namespace that the pod monitor should live in, defaults
      # to the cert-manager namespace.
      # +docs:property
      # namespace: cert-manager

      # Specifies the `prometheus` label on the created PodMonitor. This is
      # used when different Prometheus instances have label selectors matching
      # different PodMonitors.
      prometheusInstance: default

      # The path to scrape for metrics.
      path: /metrics

      # The interval to scrape metrics.
      interval: 60s

      # The timeout before a metrics scrape fails.
      scrapeTimeout: 30s

      # Additional labels to add to the PodMonitor.
      labels: {}

      # Additional annotations to add to the PodMonitor.
      annotations: {}

      # Keep labels from scraped data, overriding server-side labels.
      honorLabels: false

      # EndpointAdditionalProperties allows setting additional properties on the
      # endpoint such as relabelings, metricRelabelings etc.
      #
      # For example:
      #  endpointAdditionalProperties:
      #   relabelings:
      #   - action: replace
      #     sourceLabels:
      #     - __meta_kubernetes_pod_node_name
      #     targetLabel: instance
      #   # Configure the PodMonitor for TLS connections
      #   # See https://cert-manager.io/docs/devops-tips/prometheus-metrics/#tls
      #   scheme: https
      #   tlsConfig:
      #     serverName: cert-manager-metrics
      #     ca:
      #       secret:
      #         name: cert-manager-metrics-ca
      #         key: "tls.crt"
      #
      # +docs:property
      endpointAdditionalProperties: {}

# +docs:section=Webhook
  resources:
    limits:
      cpu: 250m
      memory: 96Mi
    requests:
      cpu: 10m
      memory: 48Mi
  webhook:
    resources:
      limits:
        cpu: 100m
        memory: 48Mi
      requests:
        cpu: 10m
        memory: 24Mi
  cainjector:
    resources:
      limits:
        cpu: 50m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 90Mi
